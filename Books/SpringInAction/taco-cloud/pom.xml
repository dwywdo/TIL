<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <!-- This project has spring-boot-starter-parent as its parent POM -->
    <!-- Parent POM provides dependency management for several libraries used in spring projects. You don't need to specify version -->
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.0</version> <!-- This project uses Spring Boot 2.4.0 and underlying core Spring Framework is 5.3.0 -->
    <relativePath /> <!-- lookup parent from repository -->
  </parent>
  <groupId>dwywdo</groupId>
  <artifactId>taco-cloud</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>taco-cloud</name>
  <description>taco-cloud</description>
  <properties>
    <java.version>11</java.version>
  </properties>
  <!--
  What does -starter- means?
  Spring Boot's starter dependencies don't have library code itself.
  It transitively pull in other libraries
  1. Small build file and easy to manage
  2. Easy to understand what this application do e.g. web starter dependency -> web application
  3. Don't need to worry about library versions
   -->
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>

    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!--
        1. Provides maven goal that enables you to run application using Maven
        2. Ensure all dependency libraries are included within the executable JAR file and available on runtime classpath
        3. Produces Manifest file in the JAR that denoted the bootstrap class (TacoCloudApplication as the main class)
        -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
